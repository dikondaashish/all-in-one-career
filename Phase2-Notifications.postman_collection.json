{
  "info": {
    "name": "Phase 2 Notifications - All-in-One Career",
    "description": "Test collection for Phase 2 notification system endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Admin Announce",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-admin-secret",
            "value": "climbly_admin_secret_2024"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"type\": \"SYSTEM\",\n  \"title\": \"Test Announcement\",\n  \"message\": \"This is a test announcement from the admin endpoint\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/notifications/announce",
          "host": ["{{base_url}}"],
          "path": ["api", "notifications", "announce"]
        },
        "description": "Admin broadcast endpoint that bypasses authentication and sends notifications to all users"
      },
      "response": []
    },
    {
      "name": "Create Notification - Admin Secret",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "x-admin-secret",
            "value": "climbly_admin_secret_2024"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userId\": \"test-user-123\",\n  \"type\": \"TASK\",\n  \"title\": \"Test Task Notification\",\n  \"message\": \"This is a test task notification created with admin secret\",\n  \"metadata\": {\n    \"action\": \"task_created\",\n    \"url\": \"/tasks/123\"\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/notifications",
          "host": ["{{base_url}}"],
          "path": ["api", "notifications"]
        },
        "description": "Create notification using admin secret (bypasses JWT auth)"
      },
      "response": []
    },
    {
      "name": "Create Notification - JWT Auth",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"type\": \"TASK\",\n  \"title\": \"User Task Notification\",\n  \"message\": \"This is a task notification created with JWT auth\",\n  \"metadata\": {\n    \"action\": \"user_task_created\",\n    \"url\": \"/tasks/user-456\"\n  }\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/notifications",
          "host": ["{{base_url}}"],
          "path": ["api", "notifications"]
        },
        "description": "Create notification using JWT authentication (userId from token)"
      },
      "response": []
    },
    {
      "name": "Get Notifications - JWT Required",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/notifications?filter=unread&limit=20",
          "host": ["{{base_url}}"],
          "path": ["api", "notifications"],
          "query": [
            {
              "key": "filter",
              "value": "unread"
            },
            {
              "key": "limit",
              "value": "20"
            }
          ]
        },
        "description": "Get user notifications (requires JWT authentication)"
      },
      "response": []
    },
    {
      "name": "Mark Notification Read",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/notifications/mark-read/{{notification_id}}",
          "host": ["{{base_url}}"],
          "path": ["api", "notifications", "mark-read", "{{notification_id}}"]
        },
        "description": "Mark a notification as read (requires JWT authentication)"
      },
      "response": []
    },
    {
      "name": "Mark All Notifications Read",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/notifications/mark-all-read",
          "host": ["{{base_url}}"],
          "path": ["api", "notifications", "mark-all-read"]
        },
        "description": "Mark all user notifications as read (requires JWT authentication)"
      },
      "response": []
    },
    {
      "name": "Archive Notification",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{jwt_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/notifications/archive/{{notification_id}}",
          "host": ["{{base_url}}"],
          "path": ["api", "notifications", "archive", "{{notification_id}}"]
        },
        "description": "Archive a notification (requires JWT authentication)"
      },
      "response": []
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": ["{{base_url}}"],
          "path": ["health"]
        },
        "description": "Health check endpoint (no authentication required)"
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:4000",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "your_jwt_token_here",
      "type": "string"
    },
    {
      "key": "notification_id",
      "value": "notification_uuid_here",
      "type": "string"
    }
  ]
}
